# Default values for Go projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
image:
  repo: ghcr.io/jenkins-x/bucketrepo
  tag: 0.4.2
  pullPolicy: IfNotPresent
  repository: ghcr.io/jenkins-x/bucketrepo
service:
  name: bucketrepo
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
serviceaccount:
  enabled: true
# define environment variables here as a map of key: value
env: {}
# define environment variables that will be stored in a secret namd 'jenkins-x-bucketrepo-env'
#
# example
#
# envSecrets:
#   AWS_ACCESS_KEY_ID: xxx
#   AWS_SECRET_ACCESS_KEY: yyy
#   AWS_CA_BUNDLE: /config/ca-certificates.crt (when using a private s3 compatible repo with self signed cert)
#
envSecrets: {}
resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 80m
    memory: 128Mi
probePath: /healthz
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
terminationGracePeriodSeconds: 10
# could typically be used to add persistence for cache
extraVolumeMounts:
extraVolumes:
config:
  auth:
    username: ""
    password: ""
  path: /config
  charts:
    path: "charts"
  storage:
    bucketUrl: ""
  cache:
    dir: /tmp/bucketrepo
  repositories:
    central: "https://repo.maven.org/maven2"
    central1: "https://repo1.maven.org/maven2"
    uk: "http://uk.maven.org/maven2/"
    spring-releases: "https://repo.spring.io/release/"
    spring-milestone: "https://repo.spring.io/milestone/"
    gradle: "https://services.gradle.org/distributions/"
    gradlem2: "https://plugins.gradle.org/m2/"
    jenkins-public: "https://repo.jenkins-ci.org/public/"
    jenkins-releases: "https://repo.jenkins-ci.org/releases/"
    jitpack: "https://jitpack.io/"
    npm: "https://registry.npmjs.org/"
logLevel: info
# standard YAML files for jx boot:
jxRequirements:
  cluster:
    clusterName: ""
    project: ""
    provider: ""
secrets:
  adminUser:
    username: "admin"
    password: ""
extraConfig: {}
